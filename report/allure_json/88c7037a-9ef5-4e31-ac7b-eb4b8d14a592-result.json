{"name": "测试用户名是否区分大小写", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZjQ2YjEzZWM='}\n  Differing items:\n  {'code': 1007} != {'code': 1000}\n  {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}\n  Right contains 1 more item:\n  {'token': 'MTY0NjMyMDgyMS4yNjM0NzIzOmJiMWM1NmI2NmU4NzFkNjdjNzU2MTZjMGQxMTI4ZTM1ZjQ2YjEzZWM='}\n  Full diff:\n    {...\n  \n  ...Full output truncated (9 lines hidden), use '-vv' to show", "trace": "self = <autotest03.testcases.test_business_token_login02.test_login05.TestLogin object at 0x04777538>\ncase = <comms.excel_utils.CaseData object at 0x03E3EB68>\n\n    @allure.severity(\"critical\")\n    @allure.description(\"商品登录模块接口测试用例\")\n    @pytest.mark.parametrize('case', cases)\n    def test_login(self, case):\n        allure.dynamic.title(case.case_title)\n        allure.attach(body=case.url, name='接口路径')\n        allure.attach(body=case.case_data, name='请求参数')\n    \n        if '#name#' in case.case_data:\n            case.case_data = replace_data(case.case_data, 'username', self.name)\n            if case.case_id == 4:  # 用户名区分大小写\n                case.case_data = replace_data(case.case_data, 'username', self.name.upper())\n        if '#passwd#' in case.case_data:\n            case.case_data = replace_data(case.case_data, 'password', self.pwd)\n            if case.case_id == 6:  # 密码区分大小写\n                case.case_data = replace_data(case.case_data, 'password', self.pwd.upper())\n    \n        response = requests.post(url=case.url, data=eval(case.case_data))\n        res_body = response.json()\n        allure.attach(body=str(res_body), name='响应结果')\n    \n        try:\n            if case.case_id == 1:\n                assert case.expect in str(res_body)\n            else:\n                assert eval(case.expect) == res_body  # assert是断言的意思，Equal是相等、比较的意思\n        except AssertionError as e:\n            ReadExcel.write_data(DATA_FILE, '登录1', case.case_id, 7, '失败')\n            logger.error('测试编号{},测试用例标题:{},执行失败！实际结果:{}'.format(case.case_id, case.case_title, res_body))\n            logger.exception(e)\n>           raise e\n\ntestcases\\test_business_token_login02\\test_login05.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <autotest03.testcases.test_business_token_login02.test_login05.TestLogin object at 0x04777538>\ncase = <comms.excel_utils.CaseData object at 0x03E3EB68>\n\n    @allure.severity(\"critical\")\n    @allure.description(\"商品登录模块接口测试用例\")\n    @pytest.mark.parametrize('case', cases)\n    def test_login(self, case):\n        allure.dynamic.title(case.case_title)\n        allure.attach(body=case.url, name='接口路径')\n        allure.attach(body=case.case_data, name='请求参数')\n    \n        if '#name#' in case.case_data:\n            case.case_data = replace_data(case.case_data, 'username', self.name)\n            if case.case_id == 4:  # 用户名区分大小写\n                case.case_data = replace_data(case.case_data, 'username', self.name.upper())\n        if '#passwd#' in case.case_data:\n            case.case_data = replace_data(case.case_data, 'password', self.pwd)\n            if case.case_id == 6:  # 密码区分大小写\n                case.case_data = replace_data(case.case_data, 'password', self.pwd.upper())\n    \n        response = requests.post(url=case.url, data=eval(case.case_data))\n        res_body = response.json()\n        allure.attach(body=str(res_body), name='响应结果')\n    \n        try:\n            if case.case_id == 1:\n                assert case.expect in str(res_body)\n            else:\n>               assert eval(case.expect) == res_body  # assert是断言的意思，Equal是相等、比较的意思\nE               AssertionError: assert {'code': 1007...: '用户名或者密码错误'} == {'code': 1000...ZjQ2YjEzZWM='}\nE                 Differing items:\nE                 {'code': 1007} != {'code': 1000}\nE                 {'msg': '用户名或者密码错误'} != {'msg': '登录成功'}\nE                 Right contains 1 more item:\nE                 {'token': 'MTY0NjMyMDgyMS4yNjM0NzIzOmJiMWM1NmI2NmU4NzFkNjdjNzU2MTZjMGQxMTI4ZTM1ZjQ2YjEzZWM='}\nE                 Full diff:\nE                   {...\nE                 \nE                 ...Full output truncated (9 lines hidden), use '-vv' to show\n\ntestcases\\test_business_token_login02\\test_login05.py:63: AssertionError"}, "description": "商品登录模块接口测试用例", "attachments": [{"name": "接口路径", "source": "b6a8ec7d-2e29-4447-8e9d-888411d539a5-attachment.attach"}, {"name": "请求参数", "source": "069ad06d-2ed5-4873-b23a-a2ed36799dd8-attachment.attach"}, {"name": "响应结果", "source": "65b336c4-df31-475a-9130-3a2d8ed2c5ed-attachment.attach"}, {"name": "log", "source": "bdd31ad4-314b-4d44-ba8f-02746aa8fc16-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "<comms.excel_utils.CaseData object at 0x03E3EB68>"}], "start": 1646290821257, "stop": 1646290821345, "uuid": "90b2a526-dcad-438c-b124-c2a362b1ad84", "historyId": "d9fed80d9426f52566daadc195c2f8b2", "testCaseId": "27d78fb121590ff51e0912485d1711a6", "fullName": "testcases.test_business_token_login02.test_login05.TestLogin#test_login", "labels": [{"name": "feature", "value": "商品登录模块"}, {"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "testcases.test_business_token_login02"}, {"name": "suite", "value": "test_login05"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-V37VTV5"}, {"name": "thread", "value": "112356-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_business_token_login02.test_login05"}]}