{"name": "手机号码格式不正确", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'code': 1007...: '手机号码格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Differing items:\n  {'code': 1007} != {'code': 1009}\n  {'msg': '手机号码格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  + {'code': 1007, 'msg': '手机号码格式不正确'}", "trace": "self = <autotest03.testcases.test_my_interface01.test_regist.TestRegister object at 0x04B09838>\ncase = <comms.excel_utils.CaseData object at 0x040C0E98>\n\n    @allure.severity(\"critical\")\n    @pytest.mark.parametrize(\"case\", cases)\n    def test_register(self, case):\n        allure.dynamic.title(case.case_title)\n    \n        db = DBUtils()\n        # 正确流程\n        if case.case_id == 1:\n            username = eval(case.case_data)['username']  # 获取传入的用户名\n            db.cud('delete from tb_user where name = %s', (username,))\n            db.close()\n    \n        response = requests.post(url=case.url, data=eval(case.case_data))\n        res_body = response.json()\n    \n        try:\n            assert eval(case.expect) == res_body\n        except AssertionError as e:\n            ReadExcel.write_data(DATA_FILE, 'Register', case.case_id, 7, '失败')\n            logger.error('测试编号{},测试用例标题:{},执行失败,实际结果为:{}!'.format(case.case_id, case.case_title, res_body))\n            logger.exception(e)\n>           raise e\n\ntest_regist.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <autotest03.testcases.test_my_interface01.test_regist.TestRegister object at 0x04B09838>\ncase = <comms.excel_utils.CaseData object at 0x040C0E98>\n\n    @allure.severity(\"critical\")\n    @pytest.mark.parametrize(\"case\", cases)\n    def test_register(self, case):\n        allure.dynamic.title(case.case_title)\n    \n        db = DBUtils()\n        # 正确流程\n        if case.case_id == 1:\n            username = eval(case.case_data)['username']  # 获取传入的用户名\n            db.cud('delete from tb_user where name = %s', (username,))\n            db.close()\n    \n        response = requests.post(url=case.url, data=eval(case.case_data))\n        res_body = response.json()\n    \n        try:\n>           assert eval(case.expect) == res_body\nE           AssertionError: assert {'code': 1007...: '手机号码格式不正确'} == {'code': 1009...sg': '用户名已存在'}\nE             Differing items:\nE             {'code': 1007} != {'code': 1009}\nE             {'msg': '手机号码格式不正确'} != {'msg': '用户名已存在'}\nE             Full diff:\nE             - {'code': 1009, 'msg': '用户名已存在'}\nE             + {'code': 1007, 'msg': '手机号码格式不正确'}\n\ntest_regist.py:40: AssertionError"}, "attachments": [{"name": "log", "source": "aa6c27df-39b6-4562-ae23-a56ccc7ac066-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "<comms.excel_utils.CaseData object at 0x040C0E98>"}], "start": 1646038860850, "stop": 1646038860929, "uuid": "645a138d-c3e5-43bb-a836-2d6b9bd15b83", "historyId": "a7f8685a6a307fd704493b9eb029eead", "testCaseId": "458238e15bd827e41b4825bbc1f6f0c7", "fullName": "test_regist.TestRegister#test_register", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "注册接口测试"}, {"name": "suite", "value": "test_regist"}, {"name": "subSuite", "value": "TestRegister"}, {"name": "host", "value": "DESKTOP-V37VTV5"}, {"name": "thread", "value": "62988-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_regist"}]}