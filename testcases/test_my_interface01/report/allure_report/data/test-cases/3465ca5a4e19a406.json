{
  "uid" : "3465ca5a4e19a406",
  "name" : "邮箱格式不正确",
  "fullName" : "test_regist.TestRegister#test_register",
  "historyId" : "0019247a55e3f8d0715b59b5f535889a",
  "time" : {
    "start" : 1646039966179,
    "stop" : 1646039966267,
    "duration" : 88
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  ?                        ^^^^^^\n  + {'code': 1009, 'msg': '邮箱格式不正确'}...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show",
  "statusTrace" : "self = <autotest03.testcases.test_my_interface01.test_regist.TestRegister object at 0x05738C10>\ncase = <comms.excel_utils.CaseData object at 0x04D07388>\n\n    @allure.severity(\"critical\")\n    @pytest.mark.parametrize(\"case\", cases)\n    def test_register(self, case):\n        allure.dynamic.title(case.case_title)\n        allure.attach(body=case.url, name='接口路径')\n        allure.attach(body=case.case_data, name='请求参数')\n    \n        db = DBUtils()\n        # 正确流程\n        if case.case_id == 1:\n            username = eval(case.case_data)['username']  # 获取传入的用户名\n            db.cud('delete from tb_user where name = %s', (username,))\n            db.close()\n    \n        response = requests.post(url=case.url, data=eval(case.case_data))\n        res_body = response.json()\n        allure.attach(body=str(res_body), name='响应结果')\n    \n        try:\n            assert eval(case.expect) == res_body\n        except AssertionError as e:\n            ReadExcel.write_data(DATA_FILE, 'Register', case.case_id, 7, '失败')\n            logger.error('测试编号{},测试用例标题:{},执行失败,实际结果为:{}!'.format(case.case_id, case.case_title, res_body))\n            logger.exception(e)\n>           raise e\n\ntest_regist.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <autotest03.testcases.test_my_interface01.test_regist.TestRegister object at 0x05738C10>\ncase = <comms.excel_utils.CaseData object at 0x04D07388>\n\n    @allure.severity(\"critical\")\n    @pytest.mark.parametrize(\"case\", cases)\n    def test_register(self, case):\n        allure.dynamic.title(case.case_title)\n        allure.attach(body=case.url, name='接口路径')\n        allure.attach(body=case.case_data, name='请求参数')\n    \n        db = DBUtils()\n        # 正确流程\n        if case.case_id == 1:\n            username = eval(case.case_data)['username']  # 获取传入的用户名\n            db.cud('delete from tb_user where name = %s', (username,))\n            db.close()\n    \n        response = requests.post(url=case.url, data=eval(case.case_data))\n        res_body = response.json()\n        allure.attach(body=str(res_body), name='响应结果')\n    \n        try:\n>           assert eval(case.expect) == res_body\nE           AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\nE             Omitting 1 identical items, use -vv to show\nE             Differing items:\nE             {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\nE             Full diff:\nE             - {'code': 1009, 'msg': '用户名已存在'}\nE             ?                        ^^^^^^\nE             + {'code': 1009, 'msg': '邮箱格式不正确'}...\nE             \nE             ...Full output truncated (2 lines hidden), use '-vv' to show\n\ntest_regist.py:43: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 13,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  ?                        ^^^^^^\n  + {'code': 1009, 'msg': '邮箱格式不正确'}...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show",
    "statusTrace" : "self = <autotest03.testcases.test_my_interface01.test_regist.TestRegister object at 0x05738C10>\ncase = <comms.excel_utils.CaseData object at 0x04D07388>\n\n    @allure.severity(\"critical\")\n    @pytest.mark.parametrize(\"case\", cases)\n    def test_register(self, case):\n        allure.dynamic.title(case.case_title)\n        allure.attach(body=case.url, name='接口路径')\n        allure.attach(body=case.case_data, name='请求参数')\n    \n        db = DBUtils()\n        # 正确流程\n        if case.case_id == 1:\n            username = eval(case.case_data)['username']  # 获取传入的用户名\n            db.cud('delete from tb_user where name = %s', (username,))\n            db.close()\n    \n        response = requests.post(url=case.url, data=eval(case.case_data))\n        res_body = response.json()\n        allure.attach(body=str(res_body), name='响应结果')\n    \n        try:\n            assert eval(case.expect) == res_body\n        except AssertionError as e:\n            ReadExcel.write_data(DATA_FILE, 'Register', case.case_id, 7, '失败')\n            logger.error('测试编号{},测试用例标题:{},执行失败,实际结果为:{}!'.format(case.case_id, case.case_title, res_body))\n            logger.exception(e)\n>           raise e\n\ntest_regist.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <autotest03.testcases.test_my_interface01.test_regist.TestRegister object at 0x05738C10>\ncase = <comms.excel_utils.CaseData object at 0x04D07388>\n\n    @allure.severity(\"critical\")\n    @pytest.mark.parametrize(\"case\", cases)\n    def test_register(self, case):\n        allure.dynamic.title(case.case_title)\n        allure.attach(body=case.url, name='接口路径')\n        allure.attach(body=case.case_data, name='请求参数')\n    \n        db = DBUtils()\n        # 正确流程\n        if case.case_id == 1:\n            username = eval(case.case_data)['username']  # 获取传入的用户名\n            db.cud('delete from tb_user where name = %s', (username,))\n            db.close()\n    \n        response = requests.post(url=case.url, data=eval(case.case_data))\n        res_body = response.json()\n        allure.attach(body=str(res_body), name='响应结果')\n    \n        try:\n>           assert eval(case.expect) == res_body\nE           AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\nE             Omitting 1 identical items, use -vv to show\nE             Differing items:\nE             {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\nE             Full diff:\nE             - {'code': 1009, 'msg': '用户名已存在'}\nE             ?                        ^^^^^^\nE             + {'code': 1009, 'msg': '邮箱格式不正确'}...\nE             \nE             ...Full output truncated (2 lines hidden), use '-vv' to show\n\ntest_regist.py:43: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "be9e8e4c4f548811",
      "name" : "接口路径",
      "source" : "be9e8e4c4f548811.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "4781c4c8d855315c",
      "name" : "请求参数",
      "source" : "4781c4c8d855315c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e2735f3df6638b76",
      "name" : "响应结果",
      "source" : "e2735f3df6638b76.attach",
      "type" : "text/plain",
      "size" : 43
    }, {
      "uid" : "e53b7f16d254454e",
      "name" : "log",
      "source" : "e53b7f16d254454e.txt",
      "type" : "text/plain",
      "size" : 1314
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 4,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "注册接口测试"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "suite",
    "value" : "test_regist"
  }, {
    "name" : "subSuite",
    "value" : "TestRegister"
  }, {
    "name" : "host",
    "value" : "DESKTOP-V37VTV5"
  }, {
    "name" : "thread",
    "value" : "67084-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_regist"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "<comms.excel_utils.CaseData object at 0x04D07388>"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ {
      "uid" : "ed46fe7e4745b2fe",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  ?                        ^^^^^^\n  + {'code': 1009, 'msg': '邮箱格式不正确'}...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show",
      "time" : {
        "start" : 1646039783074,
        "stop" : 1646039783160,
        "duration" : 86
      }
    }, {
      "uid" : "575c5ff09ccf43bd",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  ?                        ^^^^^^\n  + {'code': 1009, 'msg': '邮箱格式不正确'}...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show",
      "time" : {
        "start" : 1646039635231,
        "stop" : 1646039635313,
        "duration" : 82
      }
    }, {
      "uid" : "65b81ac89d00da3f",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  ?                        ^^^^^^\n  + {'code': 1009, 'msg': '邮箱格式不正确'}...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show",
      "time" : {
        "start" : 1646039384131,
        "stop" : 1646039384215,
        "duration" : 84
      }
    }, {
      "uid" : "130b303aee97f0f1",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  ?                        ^^^^^^\n  + {'code': 1009, 'msg': '邮箱格式不正确'}...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show",
      "time" : {
        "start" : 1646039329228,
        "stop" : 1646039329312,
        "duration" : 84
      }
    }, {
      "uid" : "110f46147d42bc37",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  ?                        ^^^^^^\n  + {'code': 1009, 'msg': '邮箱格式不正确'}...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show",
      "time" : {
        "start" : 1646039151061,
        "stop" : 1646039151145,
        "duration" : 84
      }
    }, {
      "uid" : "8d051414741c5ce7",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  ?                        ^^^^^^\n  + {'code': 1009, 'msg': '邮箱格式不正确'}...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show",
      "time" : {
        "start" : 1646039095818,
        "stop" : 1646039095898,
        "duration" : 80
      }
    }, {
      "uid" : "435a33e10f7d1214",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  ?                        ^^^^^^\n  + {'code': 1009, 'msg': '邮箱格式不正确'}...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show",
      "time" : {
        "start" : 1646038861101,
        "stop" : 1646038861184,
        "duration" : 83
      }
    }, {
      "uid" : "3a564c9580c9a769",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  ?                        ^^^^^^\n  + {'code': 1009, 'msg': '邮箱格式不正确'}...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show",
      "time" : {
        "start" : 1646038255564,
        "stop" : 1646038255657,
        "duration" : 93
      }
    }, {
      "uid" : "daa7b9fc6f7dbf9b",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  ?                        ^^^^^^\n  + {'code': 1009, 'msg': '邮箱格式不正确'}...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show",
      "time" : {
        "start" : 1646038222273,
        "stop" : 1646038222354,
        "duration" : 81
      }
    }, {
      "uid" : "22089f1e0379ce96",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  ?                        ^^^^^^\n  + {'code': 1009, 'msg': '邮箱格式不正确'}...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show",
      "time" : {
        "start" : 1646038001493,
        "stop" : 1646038001574,
        "duration" : 81
      }
    }, {
      "uid" : "f8efe268847a85b5",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  ?                        ^^^^^^\n  + {'code': 1009, 'msg': '邮箱格式不正确'}...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show",
      "time" : {
        "start" : 1646037951367,
        "stop" : 1646037951449,
        "duration" : 82
      }
    }, {
      "uid" : "58ff8c659861548a",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  ?                        ^^^^^^\n  + {'code': 1009, 'msg': '邮箱格式不正确'}...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show",
      "time" : {
        "start" : 1646037765919,
        "stop" : 1646037765999,
        "duration" : 80
      }
    }, {
      "uid" : "36bdf2740d127960",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'code': 1009...g': '邮箱格式不正确'} == {'code': 1009...sg': '用户名已存在'}\n  Omitting 1 identical items, use -vv to show\n  Differing items:\n  {'msg': '邮箱格式不正确'} != {'msg': '用户名已存在'}\n  Full diff:\n  - {'code': 1009, 'msg': '用户名已存在'}\n  ?                        ^^^^^^\n  + {'code': 1009, 'msg': '邮箱格式不正确'}...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show",
      "time" : {
        "start" : 1645708227176,
        "stop" : 1645708227258,
        "duration" : 82
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "3465ca5a4e19a406.json",
  "parameterValues" : [ "<comms.excel_utils.CaseData object at 0x04D07388>" ]
}