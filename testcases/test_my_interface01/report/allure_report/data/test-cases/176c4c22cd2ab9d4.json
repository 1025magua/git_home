{
  "uid" : "176c4c22cd2ab9d4",
  "name" : "用户名错误",
  "fullName" : "test_login.TestLogin#test_login",
  "historyId" : "9e59e38f75c692b8b2657fbe9ccbbea2",
  "time" : {
    "start" : 1646039383133,
    "stop" : 1646039383140,
    "duration" : 7
  },
  "status" : "broken",
  "statusMessage" : "TypeError: a bytes-like object is required, not 'Response'",
  "statusTrace" : "self = <autotest03.testcases.test_my_interface01.test_login.TestLogin object at 0x050BAD90>\ncase = <comms.excel_utils.CaseData object at 0x04C368F8>\n\n    @allure.severity(\"critical\")  # 设置用例优先级\n    @pytest.mark.parametrize(\"case\", cases)\n    def test_login(self, case):  # 所有的测试方法必须以test开头\n        allure.dynamic.title(case.case_title)  # 动态获取用例名称,allure报告显示用例名称\n        allure.attach(body=case.url, name='接口路径')\n        allure.attach(body=case.case_data, name='请求参数')\n        # 正确流程\n        if case.case_id == 1:\n            username = eval(case.case_data)[\"username\"]\n            password = eval(case.case_data)[\"password\"]\n            db = DBUtils()\n            db.cud('delete from tb_user where name = %s', (username,))\n            db.cud('insert into tb_user(name,passwd,email,phone) values(%s,%s,%s,%s)',\n                   (username, password, 'test@163.com', '18877446699'))\n            db.close()\n    \n        response = requests.post(url=case.url,\n                                 data=eval(case.case_data))  # 识别()中的python表达式，把字符串转成字典\n>       allure.attach(body=response, name='响应结果')\n\ntest_login.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\allure_commons\\_allure.py:179: in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\allure_pytest\\listener.py:222: in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\allure_commons\\reporter.py:119: in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <allure_commons.logger.AllureFileLogger object at 0x0410CF10>\nbody = <Response [200]>\nfile_name = '3bd15f2d-fe51-4d57-81ce-a84788ab9953-attachment.attach'\n\n    @hookimpl\n    def report_attached_data(self, body, file_name):\n        destination = os.path.join(self._report_dir, file_name)\n        with open(destination, 'wb') as attached_file:\n            if isinstance(body, text_type):\n                attached_file.write(body.encode('utf-8'))\n            else:\n>               attached_file.write(body)\nE               TypeError: a bytes-like object is required, not 'Response'\n\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\allure_commons\\logger.py:62: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: a bytes-like object is required, not 'Response'",
    "statusTrace" : "self = <autotest03.testcases.test_my_interface01.test_login.TestLogin object at 0x050BAD90>\ncase = <comms.excel_utils.CaseData object at 0x04C368F8>\n\n    @allure.severity(\"critical\")  # 设置用例优先级\n    @pytest.mark.parametrize(\"case\", cases)\n    def test_login(self, case):  # 所有的测试方法必须以test开头\n        allure.dynamic.title(case.case_title)  # 动态获取用例名称,allure报告显示用例名称\n        allure.attach(body=case.url, name='接口路径')\n        allure.attach(body=case.case_data, name='请求参数')\n        # 正确流程\n        if case.case_id == 1:\n            username = eval(case.case_data)[\"username\"]\n            password = eval(case.case_data)[\"password\"]\n            db = DBUtils()\n            db.cud('delete from tb_user where name = %s', (username,))\n            db.cud('insert into tb_user(name,passwd,email,phone) values(%s,%s,%s,%s)',\n                   (username, password, 'test@163.com', '18877446699'))\n            db.close()\n    \n        response = requests.post(url=case.url,\n                                 data=eval(case.case_data))  # 识别()中的python表达式，把字符串转成字典\n>       allure.attach(body=response, name='响应结果')\n\ntest_login.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\allure_commons\\_allure.py:179: in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\allure_pytest\\listener.py:222: in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\allure_commons\\reporter.py:119: in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <allure_commons.logger.AllureFileLogger object at 0x0410CF10>\nbody = <Response [200]>\nfile_name = '3bd15f2d-fe51-4d57-81ce-a84788ab9953-attachment.attach'\n\n    @hookimpl\n    def report_attached_data(self, body, file_name):\n        destination = os.path.join(self._report_dir, file_name)\n        with open(destination, 'wb') as attached_file:\n            if isinstance(body, text_type):\n                attached_file.write(body.encode('utf-8'))\n            else:\n>               attached_file.write(body)\nE               TypeError: a bytes-like object is required, not 'Response'\n\n..\\..\\..\\..\\新建文件夹\\lib\\site-packages\\allure_commons\\logger.py:62: TypeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "533a0a54a21876e0",
      "name" : "接口路径",
      "source" : "533a0a54a21876e0.attach",
      "type" : "text/plain",
      "size" : 32
    }, {
      "uid" : "2f4cb7eab44ee098",
      "name" : "请求参数",
      "source" : "2f4cb7eab44ee098.attach",
      "type" : "text/plain",
      "size" : 47
    }, {
      "uid" : "bfcc87cd833b4fb3",
      "name" : "响应结果",
      "source" : "bfcc87cd833b4fb3.attach",
      "type" : "application/octet-stream",
      "size" : 0
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "登录接口测试"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "DESKTOP-V37VTV5"
  }, {
    "name" : "thread",
    "value" : "67432-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "<comms.excel_utils.CaseData object at 0x04C368F8>"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "176c4c22cd2ab9d4.json",
  "parameterValues" : [ "<comms.excel_utils.CaseData object at 0x04C368F8>" ]
}